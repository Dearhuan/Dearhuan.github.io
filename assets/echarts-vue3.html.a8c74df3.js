import{_ as e,f as a,o,c,b as l,a as t,e as r,d as i,r as u}from"./app.b98f0bf8.js";const k=t("h1",{id:"vuepress\u4E2D\u4F7F\u7528vue3\u5C01\u88C5echarts\u56FE\u8868",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#vuepress\u4E2D\u4F7F\u7528vue3\u5C01\u88C5echarts\u56FE\u8868","aria-hidden":"true"},"#"),r(" Vuepress\u4E2D\u4F7F\u7528Vue3\u5C01\u88C5Echarts\u56FE\u8868")],-1),d=i(`<div class="custom-container warning"><p class="custom-container-title">\u5B58\u5728\u95EE\u9898</p><ul><li>\u56FE\u4F8Blegend\u6CA1\u6709\u5C55\u793A</li><li>resize\u4E8B\u4EF6\u76D1\u542C\u62A5\u9519</li></ul><div class="language-log ext-log"><pre class="language-log"><code><span class="token property">Uncaught TypeError:</span> Cannot read properties of undefined <span class="token operator">(</span>reading <span class="token string">&#39;type&#39;</span><span class="token operator">)</span>
  at LineView2<span class="token punctuation">.</span>render <span class="token operator">(</span>LineView<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">567</span><span class="token operator">:</span><span class="token number">36</span><span class="token operator">)</span>
  at Task2<span class="token punctuation">.</span>progress <span class="token operator">(</span>Chart<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">233</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">)</span>
  at Task2<span class="token punctuation">.</span>_doProgress <span class="token operator">(</span>task<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">187</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">)</span>
  at Task2<span class="token punctuation">.</span>perform <span class="token operator">(</span>task<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">153</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">)</span>
  at echarts<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">1821</span><span class="token operator">:</span><span class="token number">24</span>
  at GlobalModel2<span class="token punctuation">.</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token operator">(</span>Global<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">654</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">)</span>
  at Array<span class="token punctuation">.</span>forEach <span class="token operator">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token operator">)</span>
  at each <span class="token operator">(</span>util<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">205</span><span class="token operator">:</span><span class="token number">13</span><span class="token operator">)</span>
  at GlobalModel2<span class="token punctuation">.</span>eachSeries <span class="token operator">(</span>Global<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">651</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">)</span>
  at renderSeries <span class="token operator">(</span>echarts<span class="token punctuation">.</span>js<span class="token operator">:</span><span class="token number">1809</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">)</span>
</code></pre></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>// components/MyChart.vue
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted<span class="token punctuation">,</span> onBeforeMount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">&#39;echarts&#39;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">option</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;800px&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

<span class="token function">onBeforeMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  uid<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">echarts-uid-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> dark <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>dark<span class="token punctuation">)</span>

<span class="token keyword">const</span> chart <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  chart<span class="token punctuation">.</span>value <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>uid<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> dark<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&#39;dark&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

  chart<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>option<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">notMerge</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;resize&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    chart<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),v={__name:"echarts-vue3.html",setup(m){const n=a(!1),s=a(null);return n.value=!0,s.value={title:{text:"Stacked Area Chart"},tooltip:{trigger:"axis",axisPointer:{type:"cross",label:{backgroundColor:"#6a7985"}}},legend:{data:["Email","Union Ads","Video Ads","Direct","Search Engine"]},toolbox:{feature:{saveAsImage:{}}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:[{type:"category",boundaryGap:!1,data:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]}],yAxis:[{type:"value"}],series:[{name:"Email",type:"line",stack:"Total",areaStyle:{},emphasis:{focus:"series"},data:[120,132,101,134,90,230,210]},{name:"Union Ads",type:"line",stack:"Total",areaStyle:{},emphasis:{focus:"series"},data:[220,182,191,234,290,330,310]},{name:"Video Ads",type:"line",stack:"Total",areaStyle:{},emphasis:{focus:"series"},data:[150,232,201,154,190,330,410]},{name:"Direct",type:"line",stack:"Total",areaStyle:{},emphasis:{focus:"series"},data:[320,332,301,334,390,330,320]},{name:"Search Engine",type:"line",stack:"Total",label:{show:!0,position:"top"},areaStyle:{},emphasis:{focus:"series"},data:[820,932,901,934,1290,1330,1320]}]},(b,y)=>{const p=u("myChart");return o(),c("div",null,[k,l(p,{option:s.value,dark:n.value},null,8,["option","dark"]),d])}}};var f=e(v,[["__file","echarts-vue3.html.vue"]]);export{f as default};
