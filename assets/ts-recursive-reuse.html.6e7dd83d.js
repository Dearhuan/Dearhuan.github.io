import{_ as n,o as s,c as a,d as e}from"./app.232d3cd0.js";const t={},p=e(`<h1 id="typescript-\u5957\u8DEF\u4E8C\u4E4B\u9012\u5F52\u590D\u7528\u505A\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#typescript-\u5957\u8DEF\u4E8C\u4E4B\u9012\u5F52\u590D\u7528\u505A\u5FAA\u73AF" aria-hidden="true">#</a> TypeScript \u5957\u8DEF\u4E8C\u4E4B\u9012\u5F52\u590D\u7528\u505A\u5FAA\u73AF</h1><h2 id="\u9012\u5F52\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u590D\u7528" aria-hidden="true">#</a> \u9012\u5F52\u590D\u7528</h2><p><strong>\u9012\u5F52\u662F\u628A\u95EE\u9898\u5206\u89E3\u4E3A\u4E00\u7CFB\u5217\u76F8\u4F3C\u7684\u5C0F\u95EE\u9898\uFF0C\u901A\u8FC7\u51FD\u6570\u4E0D\u65AD\u8C03\u7528\u81EA\u8EAB\u6765\u89E3\u51B3\u8FD9\u4E00\u4E2A\u4E2A\u5C0F\u95EE\u9898\uFF0C\u76F4\u5230\u6EE1\u8DB3\u7ED3\u675F\u6761\u4EF6\uFF0C\u5C31\u5B8C\u6210\u4E86\u95EE\u9898\u7684\u6C42\u89E3\u3002</strong></p><p>TypeScript \u7684\u9AD8\u7EA7\u7C7B\u578B\u652F\u6301\u7C7B\u578B\u53C2\u6570\uFF0C\u53EF\u4EE5\u505A\u5404\u79CD\u7C7B\u578B\u8FD0\u7B97\u903B\u8F91\uFF0C\u8FD4\u56DE\u65B0\u7684\u7C7B\u578B\uFF0C\u548C\u51FD\u6570\u8C03\u7528\u662F\u5BF9\u5E94\u7684\uFF0C\u81EA\u7136\u4E5F\u652F\u6301\u9012\u5F52\u3002</p><p><strong>TypeScript \u7C7B\u578B\u7CFB\u7EDF\u4E0D\u652F\u6301\u5FAA\u73AF\uFF0C\u4F46\u652F\u6301\u9012\u5F52\u3002\u5F53\u5904\u7406\u6570\u91CF\uFF08\u4E2A\u6570\u3001\u957F\u5EA6\u3001\u5C42\u6570\uFF09\u4E0D\u56FA\u5B9A\u7684\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u53EA\u5904\u7406\u4E00\u4E2A\u7C7B\u578B\uFF0C\u7136\u540E\u9012\u5F52\u7684\u8C03\u7528\u81EA\u8EAB\u5904\u7406\u4E0B\u4E00\u4E2A\u7C7B\u578B\uFF0C\u76F4\u5230\u7ED3\u675F\u6761\u4EF6\u4E5F\u5C31\u662F\u6240\u6709\u7684\u7C7B\u578B\u90FD\u5904\u7406\u5B8C\u4E86\uFF0C\u5C31\u5B8C\u6210\u4E86\u4E0D\u786E\u5B9A\u6570\u91CF\u7684\u7C7B\u578B\u7F16\u7A0B\uFF0C\u8FBE\u5230\u5FAA\u73AF\u7684\u6548\u679C\u3002</strong></p><h2 id="promise\u7684\u9012\u5F52\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#promise\u7684\u9012\u5F52\u590D\u7528" aria-hidden="true">#</a> Promise\u7684\u9012\u5F52\u590D\u7528</h2><h3 id="deeppromisevaluetype" tabindex="-1"><a class="header-anchor" href="#deeppromisevaluetype" aria-hidden="true">#</a> DeepPromiseValueType</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ttt</span> <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u662F 3 \u5C42 Promise\uFF0Cvalue \u7C7B\u578B\u662F\u7D22\u5F15\u7C7B\u578B\u3002 \u6570\u91CF\u4E0D\u786E\u5B9A\uFF0C\u4E00\u6D89\u53CA\u5230\u8FD9\u4E2A\u5C31\u8981\u60F3\u5230\u7528\u9012\u5F52\u6765\u505A\uFF0C\u6BCF\u6B21\u53EA\u5904\u7406\u4E00\u5C42\u7684\u63D0\u53D6\uFF0C\u7136\u540E\u5269\u4E0B\u7684\u5230\u4E0B\u6B21\u9012\u5F52\u505A\uFF0C\u76F4\u5230\u7ED3\u675F\u6761\u4EF6\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepPromiseValueType<span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token keyword">extends</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> 
  <span class="token constant">P</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> ValueType<span class="token operator">&gt;</span></span>
    <span class="token operator">?</span> ValueType <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span></span>
      <span class="token operator">?</span> DeepPromiseValueType<span class="token operator">&lt;</span>ValueType<span class="token operator">&gt;</span>
      <span class="token operator">:</span> ValueType
    <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">DeepPromiseRes</span> <span class="token operator">=</span> DeepPromiseValueType<span class="token operator">&lt;</span>ttt<span class="token operator">&gt;</span>
<span class="token comment">// type DeepPromiseRes = {</span>
<span class="token comment">//   [x: string]: any;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u53C2\u6570 P \u662F\u5F85\u5904\u7406\u7684 Promise\uFF0C\u901A\u8FC7 extends \u7EA6\u675F\u4E3A Promise \u7C7B\u578B\uFF0Cvalue \u7C7B\u578B\u4E0D\u786E\u5B9A\uFF0C\u8BBE\u4E3A unknown\u3002</p><p>\u6BCF\u6B21\u53EA\u5904\u7406\u4E00\u4E2A\u7C7B\u578B\u7684\u63D0\u53D6\uFF0C\u4E5F\u5C31\u662F\u901A\u8FC7\u6A21\u5F0F\u5339\u914D\u63D0\u53D6\u51FA value \u7684\u7C7B\u578B\u5230 infer \u58F0\u660E\u7684\u5C40\u90E8\u53D8\u91CF ValueType \u4E2D\u3002</p><p>\u7136\u540E\u5224\u65AD\u5982\u679C ValueType \u4F9D\u7136\u662F Promise\u7C7B\u578B\uFF0C\u5C31\u9012\u5F52\u5904\u7406\u3002</p><p>\u7ED3\u675F\u6761\u4EF6\u5C31\u662F ValueType \u4E0D\u4E3A Promise \u7C7B\u578B\uFF0C\u90A3\u5C31\u5904\u7406\u5B8C\u4E86\u6240\u6709\u7684\u5C42\u6570\uFF0C\u8FD4\u56DE\u8FD9\u65F6\u7684 ValueType\u3002</p><p>\u7B80\u5316(\u4E0D\u518D\u7EA6\u675F\u7C7B\u578B\u53C2\u6570\u5FC5\u987B\u662FPromise)\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepPromiseValueType2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> ValueType<span class="token operator">&gt;</span></span>
    <span class="token operator">?</span> DeepPromiseValueType2<span class="token operator">&lt;</span>ValueType<span class="token operator">&gt;</span>
    <span class="token operator">:</span> <span class="token constant">T</span>

<span class="token keyword">type</span> <span class="token class-name">DeepPromiseRes2</span> <span class="token operator">=</span> DeepPromiseValueType2<span class="token operator">&lt;</span>ttt<span class="token operator">&gt;</span>
<span class="token comment">// type DeepPromiseRes2 = {</span>
<span class="token comment">//   [x: string]: any;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4\u7C7B\u578B\u7684\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7C7B\u578B\u7684\u9012\u5F52" aria-hidden="true">#</a> \u6570\u7EC4\u7C7B\u578B\u7684\u9012\u5F52</h2><h3 id="reversearr" tabindex="-1"><a class="header-anchor" href="#reversearr" aria-hidden="true">#</a> ReverseArr</h3><p>\u8BBE\u60F3\u4E00\u4E2A\u5143\u7956\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C06\u5176\u53CD\u8F6C\u8FC7\u6765\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseArr<span class="token operator">&lt;</span>Arr <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Arr <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> One<span class="token punctuation">,</span> <span class="token keyword">infer</span> Two<span class="token punctuation">,</span> <span class="token keyword">infer</span> Three<span class="token punctuation">]</span>
    <span class="token operator">?</span> <span class="token punctuation">[</span>Three<span class="token punctuation">,</span> Two<span class="token punctuation">,</span> One<span class="token punctuation">]</span>
    <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">ReverseArrRes</span> <span class="token operator">=</span> ReverseArr<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token comment">// type ReverseArrRes = [3, 2, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u957F\u5EA6\u4E0D\u786E\u5B9A\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseArr2<span class="token operator">&lt;</span>Arr <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Arr <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> First<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> Rest<span class="token punctuation">]</span>
    <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>ReverseArr2<span class="token operator">&lt;</span>Rest<span class="token operator">&gt;</span><span class="token punctuation">,</span> First<span class="token punctuation">]</span>
    <span class="token operator">:</span> Arr

<span class="token keyword">type</span> <span class="token class-name">ReverseArrRes2</span> <span class="token operator">=</span> ReverseArr2<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token comment">// type ReverseArrRes2 = [3, 2, 1]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="includes" tabindex="-1"><a class="header-anchor" href="#includes" aria-hidden="true">#</a> Includes</h3><p>\u65E2\u7136\u9012\u5F52\u53EF\u4EE5\u505A\u5FAA\u73AF\u7528\uFF0C\u90A3\u4E48\u50CF\u67E5\u627E\u5143\u7D20\u8FD9\u79CD\u81EA\u7136\u4E5F\u5C31\u53EF\u4EE5\u5B9E\u73B0\u3002</p><p>\u6BD4\u5982\u67E5\u627E [1, 2, 3, 4, 5] \u4E2D\u662F\u5426\u5B58\u5728 4\uFF0C\u662F\u5C31\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DEfalse\u3002</p><p>\u4ECE\u957F\u5EA6\u4E0D\u56FA\u5B9A\u7684\u6570\u7EC4\u4E2D\u67E5\u627E\u67D0\u4E2A\u5143\u7D20\uFF0C\u6570\u91CF\u4E0D\u786E\u5B9A\uFF0C\u8FD9\u65F6\u5019\u5C31\u5E94\u8BE5\u60F3\u5230\u9012\u5F52\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//  A \u662F B \u7684\u5B50\u7C7B\u578B\u5E76\u4E14 B \u4E5F\u662F A \u7684\u5B50\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">isEqual<span class="token operator">&lt;</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  <span class="token punctuation">(</span><span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token constant">B</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token class-name">Includes<span class="token operator">&lt;</span>Arr <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> FindItem<span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Arr <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> First<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> Rest<span class="token punctuation">]</span>
    <span class="token operator">?</span> isEqual<span class="token operator">&lt;</span>First<span class="token punctuation">,</span> FindItem<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span>
      <span class="token operator">?</span> <span class="token boolean">true</span>
      <span class="token operator">:</span> Includes<span class="token operator">&lt;</span>Rest<span class="token punctuation">,</span> FindItem<span class="token operator">&gt;</span>
    <span class="token operator">:</span> <span class="token boolean">false</span>

<span class="token keyword">type</span> <span class="token class-name">IncludesRes</span> <span class="token operator">=</span> Includes<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">&gt;</span>
<span class="token comment">// type IncludesRes = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="removeitem" tabindex="-1"><a class="header-anchor" href="#removeitem" aria-hidden="true">#</a> RemoveItem</h3><p>\u5220\u9664\u5143\u7D20</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">RemoveItem<span class="token operator">&lt;</span>
  Arr <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  Item<span class="token punctuation">,</span>
  Result <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Arr <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> First<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> Rest<span class="token punctuation">]</span>
  <span class="token operator">?</span> isEqual<span class="token operator">&lt;</span>First<span class="token punctuation">,</span> Item<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span>
    <span class="token operator">?</span> RemoveItem<span class="token operator">&lt;</span>Rest<span class="token punctuation">,</span> Item<span class="token punctuation">,</span> Result<span class="token operator">&gt;</span>
    <span class="token operator">:</span> RemoveItem<span class="token operator">&lt;</span>Rest<span class="token punctuation">,</span> Item<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>Result<span class="token punctuation">,</span> First<span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token operator">:</span> Result

<span class="token keyword">type</span> <span class="token class-name">RemoveItemRes</span> <span class="token operator">=</span> RemoveItem<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">&gt;</span>
<span class="token comment">// type RemoveItemRes = [1, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u53C2\u6570 Arr \u662F\u5F85\u5904\u7406\u7684\u6570\u7EC4\uFF0C\u5143\u7D20\u7C7B\u578B\u4EFB\u610F\uFF0C\u4E5F\u5C31\u662F unknown[]\u3002\u7C7B\u578B\u53C2\u6570Item \u4E3A\u5F85\u67E5\u627E\u7684\u5143\u7D20\u7C7B\u578B\u3002\u7C7B\u578B\u53C2\u6570 Result \u662F\u6784\u9020\u51FA\u7684\u65B0\u6570\u7EC4\uFF0C\u9ED8\u8BA4\u503C\u662F []\u3002</p><p>\u901A\u8FC7\u6A21\u5F0F\u5339\u914D\u63D0\u53D6\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u662F Item \u7C7B\u578B\u7684\u8BDD\u5C31\u5220\u9664\uFF0C\u4E5F\u5C31\u662F\u4E0D\u653E\u5165\u6784\u9020\u7684\u65B0\u6570\u7EC4\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E4B\u524D\u7684 Result\u3002</p><p>\u5426\u5219\u653E\u5165\u6784\u9020\u7684\u65B0\u6570\u7EC4\uFF0C\u4E5F\u5C31\u662F\u518D\u6784\u9020\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4 [...Result, First]\u3002</p><p>\u76F4\u5230\u6A21\u5F0F\u5339\u914D\u4E0D\u518D\u6EE1\u8DB3\uFF0C\u4E5F\u5C31\u662F\u5904\u7406\u5B8C\u4E86\u6240\u6709\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE\u8FD9\u65F6\u5019\u7684 Result\u3002</p><h3 id="buildarray" tabindex="-1"><a class="header-anchor" href="#buildarray" aria-hidden="true">#</a> BuildArray</h3><p>\u6570\u7EC4\u7C7B\u578B\u7684\u6784\u9020\uFF0C\u5982\u679C\u6784\u9020\u7684\u6570\u7EC4\u7C7B\u578B\u5143\u7D20\u4E2A\u6570\u4E0D\u786E\u5B9A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">BuildArray<span class="token operator">&lt;</span>
  Length <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
  Ele <span class="token operator">=</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
  Arr <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Arr<span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name">Length</span>
  <span class="token operator">?</span> Arr
  <span class="token operator">:</span> BuildArray<span class="token operator">&lt;</span>Length<span class="token punctuation">,</span> Ele<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>Arr<span class="token punctuation">,</span> Ele<span class="token punctuation">]</span><span class="token operator">&gt;</span>

<span class="token keyword">type</span> <span class="token class-name">BuildArrayRes</span> <span class="token operator">=</span> BuildArray<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type BuildArrayRes = [&quot;x&quot;, &quot;x&quot;, &quot;x&quot;, &quot;x&quot;, &quot;x&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u53C2\u6570 Length \u4E3A\u6570\u7EC4\u957F\u5EA6\uFF0C\u7EA6\u675F\u4E3A number\u3002\u7C7B\u578B\u53C2\u6570 Ele \u4E3A\u5143\u7D20\u7C7B\u578B\uFF0C\u9ED8\u8BA4\u503C\u4E3A unknown\u3002\u7C7B\u578B\u53C2\u6570 Arr \u4E3A\u6784\u9020\u51FA\u7684\u6570\u7EC4\uFF0C\u9ED8\u8BA4\u503C\u662F []\u3002</p><p>\u6BCF\u6B21\u5224\u65AD\u4E0B Arr \u7684\u957F\u5EA6\u662F\u5426\u5230\u4E86 Length\uFF0C\u662F\u7684\u8BDD\u5C31\u8FD4\u56DE Arr\uFF0C\u5426\u5219\u5728 Arr \u4E0A\u52A0\u4E00\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u9012\u5F52\u6784\u9020\u3002</p><h2 id="\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u9012\u5F52" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u9012\u5F52</h2><h3 id="replaceall" tabindex="-1"><a class="header-anchor" href="#replaceall" aria-hidden="true">#</a> ReplaceAll</h3><p>\u628A\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u67D0\u4E2A\u5B57\u7B26\u66FF\u6362\u6210\u53E6\u4E00\u4E2A:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReplaceStr<span class="token operator">&lt;</span>
  Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  From <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  To <span class="token keyword">extends</span> <span class="token builtin">string</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>From<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Suffix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>To<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Suffix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> Str

<span class="token keyword">type</span> <span class="token class-name">ReplaceStrRes</span> <span class="token operator">=</span> ReplaceStr<span class="token operator">&lt;</span><span class="token string">&#39;he is xxx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;james&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type ReplaceStrRes = &quot;he is james&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u786E\u5B9AFrom\u7684\u4E2A\u6570\uFF1F</p><p><strong>\u5728\u7C7B\u578B\u4F53\u64CD\u91CC\uFF0C\u9047\u5230\u6570\u91CF\u4E0D\u786E\u5B9A\u7684\u95EE\u9898\uFF0C\u5C31\u8981\u6761\u4EF6\u53CD\u5C04\u7684\u60F3\u5230\u9012\u5F52\u3002</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReplaceAll<span class="token operator">&lt;</span>
  Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  From <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  To <span class="token keyword">extends</span> <span class="token builtin">string</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Left<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>From<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Right<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Left<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>To<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ReplaceAll<span class="token operator">&lt;</span>Right<span class="token punctuation">,</span> From<span class="token punctuation">,</span> To<span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">:</span> Str

<span class="token keyword">type</span> <span class="token class-name">ReplaceAllRes</span> <span class="token operator">=</span> ReplaceAll<span class="token operator">&lt;</span><span class="token string">&#39;he is ???&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;xyz&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type ReplaceAllRes = &quot;he is xyzxyzxyz&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u578B\u53C2\u6570 Str \u662F\u5F85\u5904\u7406\u7684\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0CFrom \u662F\u5F85\u66FF\u6362\u7684\u5B57\u7B26\uFF0CTo \u662F\u66FF\u6362\u5230\u7684\u5B57 \u7B26\u3002</p><p>\u901A\u8FC7\u6A21\u5F0F\u5339\u914D\u63D0\u53D6 From \u5DE6\u53F3\u7684\u5B57\u7B26\u4E32\u5230 infer \u58F0\u660E\u7684\u5C40\u90E8\u53D8\u91CF Left \u548C Right \u91CC\u3002</p><p>\u7528 Left \u548C To \u6784\u9020\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u5269\u4F59\u7684 Right \u90E8\u5206\u7EE7\u7EED\u9012\u5F52\u7684\u66FF\u6362\u3002</p><p>\u7ED3\u675F\u6761\u4EF6\u662F\u4E0D\u518D\u6EE1\u8DB3\u6A21\u5F0F\u5339\u914D\uFF0C\u4E5F\u5C31\u662F\u6CA1\u6709\u8981\u66FF\u6362\u7684\u5143\u7D20\uFF0C\u8FD9\u65F6\u5C31\u76F4\u63A5\u8FD4\u56DE\u5B57\u7B26\u4E32 Str\u3002</p><h3 id="stringtounion" tabindex="-1"><a class="header-anchor" href="#stringtounion" aria-hidden="true">#</a> StringToUnion</h3><p>\u8BBE\u60F3\u5C06\u5B57\u7B26\u4E32\u7684\u6BCF\u4E2A\u5B57\u7B26\u63D0\u53D6\u51FA\u6765\u7EC4\u6210\u8054\u5408\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">StringToUnion<span class="token operator">&lt;</span>Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> One<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Two<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Three<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">?</span> One <span class="token operator">|</span> Two <span class="token operator">|</span>Three
    <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">StringToUnionRes</span> <span class="token operator">=</span> StringToUnion<span class="token operator">&lt;</span><span class="token string">&#39;xyz&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type StringToUnionRes = &quot;x&quot; | &quot;y&quot; | &quot;z&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5B57\u7B26\u4E32\u957F\u5EA6\u4E0D\u56FA\u5B9A\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">StringToUnion2<span class="token operator">&lt;</span>Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Rest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">?</span> First <span class="token operator">|</span> StringToUnion2<span class="token operator">&lt;</span>Rest<span class="token operator">&gt;</span>
    <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">StringToUnion2Res</span> <span class="token operator">=</span> StringToUnion2<span class="token operator">&lt;</span><span class="token string">&#39;abcxyz&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type StringToUnion2Res = &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;x&quot; | &quot;y&quot; | &quot;z&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reversestr" tabindex="-1"><a class="header-anchor" href="#reversestr" aria-hidden="true">#</a> ReverseStr</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseStr<span class="token operator">&lt;</span>
  Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  Result <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Rest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
      <span class="token operator">?</span> ReverseStr<span class="token operator">&lt;</span>Rest<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token operator">&gt;</span>
      <span class="token operator">:</span> Result

<span class="token keyword">type</span> <span class="token class-name">ReverseStrRes</span> <span class="token operator">=</span> ReverseStr<span class="token operator">&lt;</span><span class="token string">&#39;xyz&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">// type ReverseStrRes = &quot;zyx&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReverseStr2<span class="token operator">&lt;</span>Str <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
  Str <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> Rest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ReverseStr2<span class="token operator">&lt;</span>Rest<span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>First<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">:</span> Str

<span class="token keyword">type</span> <span class="token class-name">ReverseStr2Res</span> <span class="token operator">=</span> ReverseStr2<span class="token operator">&lt;</span><span class="token string">&#39;xyz&#39;</span><span class="token operator">&gt;</span> 
<span class="token comment">// type ReverseStr2Res = &quot;zyx&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61\u7C7B\u578B\u7684\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7C7B\u578B\u7684\u9012\u5F52" aria-hidden="true">#</a> \u5BF9\u8C61\u7C7B\u578B\u7684\u9012\u5F52</h2><h3 id="deepreadonly" tabindex="-1"><a class="header-anchor" href="#deepreadonly" aria-hidden="true">#</a> DeepReadonly</h3><p>\u5BF9\u8C61\u7C7B\u578B\u7684\u9012\u5F52\uFF0C\u4E5F\u53EF\u4EE5\u53EB\u505A\u7D22\u5F15\u7C7B\u578B\u7684\u9012\u5F52\u3002</p><p>\u4E4B\u524D\u5B9E\u73B0\u4E86\u7D22\u5F15\u7C7B\u578B\u7684\u6620\u5C04\uFF0C\u7ED9\u7D22\u5F15\u52A0\u4E0A\u4E86 readonly \u7684\u4FEE\u9970\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">ToReadonlyRes</span> <span class="token operator">=</span> ToReadonly<span class="token operator">&lt;</span><span class="token punctuation">{</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token comment">// type ToReadonlyRes = {</span>
<span class="token comment">//   readonly a: string;</span>
<span class="token comment">//   readonly b: number;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7D22\u5F15\u7C7B\u578B\u5C42\u6570\u4E0D\u786E\u5B9A\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token punctuation">{</span>
    b<span class="token operator">:</span> <span class="token punctuation">{</span>
      c<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;dong&#39;</span><span class="token punctuation">,</span>
        d<span class="token operator">:</span> <span class="token punctuation">{</span>
          e<span class="token operator">:</span> <span class="token punctuation">{</span>
            guang<span class="token operator">:</span> <span class="token builtin">string</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepReadonly<span class="token operator">&lt;</span>Obj <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token punctuation">[</span>Key <span class="token keyword">in</span> <span class="token keyword">keyof</span> Obj<span class="token punctuation">]</span><span class="token operator">:</span>
    Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name">object</span>
      <span class="token operator">?</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span>
        <span class="token operator">?</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span>
        <span class="token operator">:</span> DeepReadonly<span class="token operator">&lt;</span>Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span><span class="token operator">&gt;</span>
      <span class="token operator">:</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">DeepReadonlyRes</span> <span class="token operator">=</span> DeepReadonly<span class="token operator">&lt;</span>obj<span class="token operator">&gt;</span>
<span class="token comment">// type DeepReadonlyRes = {</span>
<span class="token comment">//   readonly a: DeepReadonly&lt;{</span>
<span class="token comment">//       b: {</span>
<span class="token comment">//           c: {</span>
<span class="token comment">//               f: () =&gt; &#39;dong&#39;;</span>
<span class="token comment">//               d: {</span>
<span class="token comment">//                   e: {</span>
<span class="token comment">//                       guang: string;</span>
<span class="token comment">//                   };</span>
<span class="token comment">//               };</span>
<span class="token comment">//           };</span>
<span class="token comment">//       };</span>
<span class="token comment">//   }&gt;;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u5565\u8FD9\u91CC\u6CA1\u6709\u8BA1\u7B97\uFF1F</p><p>\u56E0\u4E3A ts \u53EA\u6709\u7C7B\u578B\u88AB\u7528\u5230\u7684\u65F6\u5019\u624D\u4F1A\u505A\u7C7B\u578B\u8BA1\u7B97\u3002</p><p>\u6240\u4EE5\u53EF\u4EE5\u5728\u524D\u9762\u52A0\u4E0A\u4E00\u6BB5 Obj extends never ? never \u6216\u8005 Obj extends any \u7B49\uFF0C\u8BA9\u5B83\u89E6\u53D1\u8BA1\u7B97\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepReadonly2<span class="token operator">&lt;</span>Obj <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> 
  Obj <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span>
    <span class="token operator">?</span> <span class="token punctuation">{</span>
      <span class="token keyword">readonly</span> <span class="token punctuation">[</span>Key <span class="token keyword">in</span> <span class="token keyword">keyof</span> Obj<span class="token punctuation">]</span><span class="token operator">:</span>
        Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name">object</span>
          <span class="token operator">?</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span>
            <span class="token operator">?</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span>
            <span class="token operator">:</span> DeepReadonly2<span class="token operator">&lt;</span>Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span><span class="token operator">&gt;</span>
          <span class="token operator">:</span> Obj<span class="token punctuation">[</span>Key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">DeepReadonly2Res</span> <span class="token operator">=</span> DeepReadonly2<span class="token operator">&lt;</span>obj<span class="token operator">&gt;</span>
<span class="token comment">// type DeepReadonly2Res = {</span>
<span class="token comment">//   readonly a: {</span>
<span class="token comment">//       readonly b: {</span>
<span class="token comment">//           readonly c: {</span>
<span class="token comment">//               readonly f: () =&gt; &#39;dong&#39;;</span>
<span class="token comment">//               readonly d: {</span>
<span class="token comment">//                   readonly e: {</span>
<span class="token comment">//                       readonly guang: string;</span>
<span class="token comment">//                   };</span>
<span class="token comment">//               };</span>
<span class="token comment">//           };</span>
<span class="token comment">//       };</span>
<span class="token comment">//   };</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u9012\u5F52\u662F\u628A\u95EE\u9898\u5206\u89E3\u6210\u4E00\u4E2A\u4E2A\u5B50\u95EE\u9898\uFF0C\u901A\u8FC7\u89E3\u51B3\u4E00\u4E2A\u4E2A\u5B50\u95EE\u9898\u6765\u89E3\u51B3\u6574\u4E2A\u95EE\u9898\u3002\u5F62\u5F0F \u662F\u4E0D\u65AD\u7684\u8C03\u7528\u51FD\u6570\u81EA\u8EAB\uFF0C\u76F4\u5230\u6EE1\u8DB3\u7ED3\u675F\u6761\u4EF6\u3002</p><p>\u5728 TypeScript \u7C7B\u578B\u7CFB\u7EDF\u4E2D\u7684\u9AD8\u7EA7\u7C7B\u578B\u4E5F\u540C\u6837\u652F\u6301\u9012\u5F52\uFF0C<strong>\u5728\u7C7B\u578B\u4F53\u64CD\u4E2D\uFF0C\u9047\u5230\u6570\u91CF\u4E0D\u786E\u5B9A\u7684\u95EE\u9898\uFF0C\u8981\u6761\u4EF6\u53CD\u5C04\u7684\u60F3\u5230\u9012\u5F52\u3002</strong> \u6BD4\u5982\u6570\u7EC4\u957F\u5EA6\u4E0D\u786E\u5B9A\u3001\u5B57\u7B26\u4E32\u957F\u5EA6\u4E0D\u786E\u5B9A\u3001 \u7D22\u5F15\u7C7B\u578B\u5C42\u6570\u4E0D\u786E\u5B9A\u7B49\u3002</p>`,76),o=[p];function l(c,i){return s(),a("div",null,o)}var u=n(t,[["render",l],["__file","ts-recursive-reuse.html.vue"]]);export{u as default};
